/* config.h.in.  Generated from configure.in by autoheader.  */

/* Set to turn on free block coalescing (only for nonmoving GC) */
#undef ALLOC_COALESCE

/* Define when building with BITS64 */
#undef BITS64

/* Set to enable cpu logging */
#undef CPU_UTILIZATION_LOGGING

/* Which GC algorithm to use. see gc.h for details */
#undef GC_ALGORITHM

/* set to use auto-tuning GC */
#undef GC_CYCLE_TIME_ADAPTIVE

/* Set to turn on coalescing of contihous dead objects b/f free (only for
   nonmoving GC) */
#undef GC_FREE_CONTIGOUS_HACK

/* Set to turn on GC finalizers */
#undef GC_HAS_FINALIZERS

/* Set if threads enabled */
#undef GC_HAS_THREADS

/* Size of GC heap */
#undef GC_HEAPSIZE

/* Set to run GC incrementally */
#undef GC_IS_INCREMENTAL

/* Set to enable GET_THREAD_ROOT optimization */
#undef GC_LAZY_GET_THREAD_ROOT

/* EXPERIMENTAL */
#undef GC_MARK_ROOTS_ATOMIC

/* set to measure S_h */
#undef GC_MEASURE_HEAPSTATE

/* Set to turn off the debug layer */
#undef GC_NODEBUG

/* EXPERIMENTAL */
#undef GC_NO_GC_LOCKING

/* set to use only time and no work metric */
#undef GC_ONLY_TIME

/* set to predict C_GC after mark phase */
#undef GC_PREDICT_C

/* Set to turn on GC warnings */
#undef GC_PRINT_DEBUG

/* Set to turn on GC warnings */
#undef GC_PRINT_WARNINGS

/* Set to turn on GC profiling */
#undef GC_PROFILING

/* Thread model. see gc.h for details */
#undef GC_THREAD

/* Set to reference call ref params */
#undef GC__REF_CALL_PARAMS

/* Set to turn on exceptions. See exception.h for details */
#undef HAS_EXCEPTIONS

/* Define when building with HAS_FLOAT */
#undef HAS_FLOAT

/* Set to turn on reflection */
#undef HAS_REFLECTION

/* Define when building for AVR */
#undef HOST_AVR

/* Do memory initialization in allocator on allocation (only for nonmoving GC)
   */
#undef INIT_ON_ALLOC

/* Do memory initialization in allocator on free (only for nonmoving GC) */
#undef INIT_ON_FREE

/* Do memory initialization in GC (only for nonmoving GC) */
#undef INIT_ON_GC

/* Set to turn on source line info */
#undef J2C_SOURCELINES

/* set to enable Java-specific features */
#undef JAVA_2_C

/* Define when building with LINUX */
#undef LINUX

/* set to enable logging (only works with ivm threads) */
#undef LOGGING

/* set to enable non-critical memory */
#undef LPMEM

/* set to measure C_GC */
#undef MEASURE_CGC

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Set to use powers-of-two block sizes (only for nonmoving GC) */
#undef POWER_OF_TWO_ALIGN

/* Define when building with RTAI */
#undef RTAI

/* Set to turn on heap and pointer sanity checks (only for nonmoving GC) */
#undef SANITY_CHECKS

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* set to enable GC time measurements */
#undef TIME_MEASUREMENTS

/* set to use the time-triggered GC */
#undef TIME_METRIC

/* Version number of package */
#undef VERSION

/* Define when building with LINUX */
#undef VXWORKS

/* Set to enable AVR external clock */
#undef _AVR_EXT_CLOCK

/* Set to enable AVR external memory */
#undef _AVR_EXT_MEM

/* Set to enable UART in the AVR */
#undef _AVR_UART

/* Normal Java thread priority */
#undef _RT_NORMAL_PR_JAVA

/* RT Scheduling policy */
#undef _RT_SCHEDULING_POSIX

/* Define to empty if `const' does not conform to ANSI C. */
#undef const
